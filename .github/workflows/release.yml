name: cbdb release
on:
  push:
    tags:
    - 'v*'

env:
  BUILD_TYPE: "release"
  FTS_MODE: "internal_fts"
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  GEN_DOCKER_TAG: true
  INSTALL_DIR: "/usr/local/cloudberry-db"
  CLIENT_INSTALL_DIR: "/usr/local/cloudberry-clients"


jobs:
  build:
    runs-on: [self-hosted, default]
    steps:
      - uses: actions/checkout@v3
      - name: Run build script
        run: |
          echo $GITHUB_RUN_ID > BUILD_NUMBER
          hd-ci/compile_cbdb.bash $GEN_DOCKER_TAG
      - uses: actions/upload-artifact@v3
        with:
          name: cbdb-variables
          path: /opt/actions-runner/_work/cloudberrydb/cloudberrydb/cbdb-artifacts.txt
      - uses: actions/upload-artifact@v3
        with:
          name: cbdb-package
          path: /tmp/server-build*
      - uses: actions/upload-artifact@v3
        with:
          name: cbdb-rpm
          path: /tmp/cloudberry-db*.rpm
  icw-test:
    needs: build
    runs-on: [self-hosted, example]
    env:
      MAKE_TEST_COMMAND: "-k PGOPTIONS='-c optimizer=off' installcheck-world"
      TEST_OS: "centos"
      DUMP_DB: "true"
      BUILD_TYPE: release
    steps:
      - uses: actions/checkout@v3
        with:
          path: "gpdb_src"
      - uses: actions/download-artifact@v3
        with:
          name: cbdb-variables
          path: /opt/
      - uses: actions/download-artifact@v3
        with:
          name: cbdb-package
          path: /opt/
      - uses: actions/download-artifact@v3
        with:
          name: cbdb-rpm
          path: /opt/
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
      - name: Run icw-test script
        run: |
          mkdir /code
          cp -a gpdb_src/ /code
          cd /code
          echo $GITHUB_RUN_ID > gpdb_src/BUILD_NUMBER
          gpdb_src/hd-ci/icw_cbdb.bash internal_fts
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: icw-test
          path: | 
            /code/gpdb_src/src/test/regress/regression.out
            /code/gpdb_src/src/test/regress/regression.diffs
            /code/gpdb_src/src/test/regress/results/
            /code/gpdb_src/src/test/regress/expected/
            /code/gpdb_src/src/test/isolation2/regression.out
            /code/gpdb_src/src/test/isolation2/regression.diffs
            /code/gpdb_src/src/test/isolation2/results/
            /code/gpdb_src/src/test/isolation2/expected/
            /code/gpdb_src/gpAux/gpdemo/datadirs/standby/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/qddir/demoDataDir-1/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast1/demoDataDir0/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast2/demoDataDir1/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast3/demoDataDir2/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast_mirror1/demoDataDir0/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast_mirror2/demoDataDir1/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast_mirror3/demoDataDir2/log/
  icw-orca-test:
    needs: build
    runs-on: [self-hosted, example]
    env:
      MAKE_TEST_COMMAND: "-k PGOPTIONS='-c optimizer=on' installcheck-world"
      TEST_OS: "centos"
      DUMP_DB: "true"
      BUILD_TYPE: release
    steps:
      - uses: actions/checkout@v3
        with:
          path: "gpdb_src"
      - uses: actions/download-artifact@v3
        with:
          name: cbdb-variables
          path: /opt/
      - uses: actions/download-artifact@v3
        with:
          name: cbdb-package
          path: /opt/
      - uses: actions/download-artifact@v3
        with:
          name: cbdb-rpm
          path: /opt/
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
      - name: Run icw-orca-test script
        run: |
          mkdir /code
          cp -a gpdb_src/ /code
          cd /code
          echo $GITHUB_RUN_ID > gpdb_src/BUILD_NUMBER
          gpdb_src/hd-ci/icw_cbdb.bash internal_fts
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: icw-orca-test
          path: | 
            /code/gpdb_src/src/test/regress/regression.out
            /code/gpdb_src/src/test/regress/regression.diffs
            /code/gpdb_src/src/test/regress/results/
            /code/gpdb_src/src/test/regress/expected/
            /code/gpdb_src/src/test/isolation2/regression.out
            /code/gpdb_src/src/test/isolation2/regression.diffs
            /code/gpdb_src/src/test/isolation2/results/
            /code/gpdb_src/src/test/isolation2/expected/
            /code/gpdb_src/gpAux/gpdemo/datadirs/standby/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/qddir/demoDataDir-1/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast1/demoDataDir0/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast2/demoDataDir1/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast3/demoDataDir2/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast_mirror1/demoDataDir0/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast_mirror2/demoDataDir1/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast_mirror3/demoDataDir2/log/
  icw-parallel-test:
    needs: build
    runs-on: [self-hosted, example]
    env:
      MAKE_TEST_COMMAND: "-C src/test/regress installcheck-cbdb-parallel"
      TEST_OS: "centos"
      DUMP_DB: "true"
    steps:
      - uses: actions/checkout@v3
        with:
          path: "gpdb_src"
      - uses: actions/download-artifact@v3
        with:
          name: cbdb-variables
          path: /opt/
      - uses: actions/download-artifact@v3
        with:
          name: cbdb-package
          path: /opt/
      - name: Run icw-parallel-test script
        run: |
          mkdir /code
          cp -a gpdb_src/ /code
          cd /code
          echo $GITHUB_RUN_ID > gpdb_src/BUILD_NUMBER
          gpdb_src/hd-ci/icw_cbdb.bash internal_fts
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: icw-parallel-test
          path: | 
            /code/gpdb_src/src/test/regress/regression.out
            /code/gpdb_src/src/test/regress/regression.diffs
            /code/gpdb_src/src/test/regress/results/
            /code/gpdb_src/src/test/regress/expected/
            /code/gpdb_src/src/test/isolation2/regression.out
            /code/gpdb_src/src/test/isolation2/regression.diffs
            /code/gpdb_src/src/test/isolation2/results/
            /code/gpdb_src/src/test/isolation2/expected/
            /code/gpdb_src/gpAux/gpdemo/datadirs/standby/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/qddir/demoDataDir-1/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast1/demoDataDir0/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast2/demoDataDir1/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast3/demoDataDir2/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast_mirror1/demoDataDir0/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast_mirror2/demoDataDir1/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast_mirror3/demoDataDir2/log/
  release:
    name: Upload Release Asset
    needs: ["icw-orca-test","icw-test","icw-parallel-test"]
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - uses: actions/download-artifact@v3
        with:
          name: cbdb-package
          path: /opt/
      - uses: actions/download-artifact@v3
        with:
          name: cbdb-rpm
          path: /opt/
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: alexellis/upload-assets@master
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["/opt/server-build*","/opt/cloudberry-db-*"]'