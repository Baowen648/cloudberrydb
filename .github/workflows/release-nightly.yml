name: Build and Release RPM

on:
  push:
    branches:
      - test-release-nightly
  schedule:
    - cron: '* 16 * * *'


jobs:
  Build-rpm:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
        with:
          ref: test-release-nightly
      - name: Environmental construction
        run: |

          pushd $GITHUB_WORKSPACE
          pushd readmes
          source README.CentOS.bash
          popd

          sudo yum -y install R apr apr-devel apr-util automake autoconf bash bison bison-devel bzip2 bzip2-devel centos-release-scl curl flex flex-devel gcc gcc-c++ git gdb iproute krb5-devel less libcurl libcurl-devel libevent libevent-devel libxml2 libxml2-devel libyaml libzstd-devel libzstd make openldap openssh openssh-clients openssh-server openssl openssl-devel openssl-libs perl python3-devel readline readline-devel rsync sed sudo tar vim wget which xerces-c-devel zip zlib
          sudo yum -y install epel-release
          sudo yum install -y centos-release-scl
          sudo yum -y install devtoolset-10-gcc devtoolset-10-gcc-c++ devtoolset-10-binutils
          #scl enable devtoolset-10 bash
          source /opt/rh/devtoolset-10/enable
          sudo gcc -v
          sudo chmod 777 /etc/bashrc
          sudo echo "source /opt/rh/devtoolset-10/enable" >> /etc/bashrc
          source /etc/bashrc
          sudo chmod 644 /etc/bashrc
          sudo ln -sf /usr/bin/cmake3 /usr/local/bin/cmake
          sudo chmod 777 /etc/ld.so.conf
          sudo echo -e "/usr/local/lib \n/usr/local/lib64" >> /etc/ld.so.conf
          sudo ldconfig
          echo "Environment setup completed ！！！"

      - name: get new tag
        id: set_value
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          sudo git pull
          # sudo git fetch origin --tags
          echo "The workspace is $GITHUB_WORKSPACE"
          timestamp=$(date +"%Y%m%d")

          rm -rf /tmp/release
          mkdir /tmp/release

          latest_tag=$(git tag | sort -V -r | head -n 1)
          main_version=$(echo $latest_tag | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+')
          new_tag="$main_version-$timestamp-nightly"

          echo "The latest tag that already exists is $latest_tag"
          echo "The main version is $main_version"
          echo "The new tag is $new_tag"
          echo "::set-output name=NEW_TAG::${new_tag}"
          echo "::set-output name=MAIN_VERSION::${main_version}"


          sudo git tag $new_tag
          git tag
          previous_tag=$latest_tag
          current_tag=$new_tag
          # 获取从上一个标签到当前标签之间的提交记录
          commit_logs=$(git log --oneline $previous_tag..$current_tag)
          # 整理提交记录为发布说明格式
          release_notes="What's Changed:\n"
          while IFS= read -r line; do
              commit_message=$(echo $line | cut -d ' ' -f 2-)  # 提取提交信息
              change_details=$(echo $line | cut -d ' ' -f 1)   # 提取变更内容
              release_notes+="\n- $commit_message: $change_details"
          done <<< "$commit_logs"

          # 将整理后的发布说明附加到文件中
          echo -e "$release_notes" >> RELEASE_NOTES.md

          echo "Release notes have been updated in RELEASE_NOTES.md"
          cat RELEASE_NOTES.md
          pwd
          ls -al

      - name: build_rpm
        run: |
          ./configure --with-perl --with-python --with-libxml --with-gssapi --prefix=/home/gpadmin/cbdb-install
          make -j16
          make install
          pwd
          ruby -v
          fpm --version
          echo "制作rpm包"
          mkdir -p tmp/usr/local/cloudberrydb
          sudo cp -a /home/gpadmin/cbdb-install/* tmp/usr/local/cloudberrydb
          fpm -s dir -t rpm -n cloudberrydb -v ${{ steps.set_value.outputs.MAIN_VERSION }} -p ./ -C tmp
          pwd
          ls -al
          cp cloudberrydb-${{ steps.set_value.outputs.MAIN_VERSION }}-1.x86_64.rpm /tmp/release
          ls -al /tmp/release/

      - name: DEBUG
        run: |
          echo "${{ steps.set_value.outputs.NEW_TAG }}"
          echo "${{ steps.set_value.outputs.MAIN_VERSION }}"
      - name: release
        uses: softprops/action-gh-release@v1
        with:
          files: "/tmp/release/*.rpm"
          name: v${{ steps.set_value.outputs.NEW_TAG }}
          tag_name: "${{ steps.set_value.outputs.NEW_TAG }}"
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_NIGHTLY }}